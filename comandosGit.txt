comandos git


git init --->> inicializar o git no projeto

git clone --->> obter uma cópia de projeto de um repositorio remoto, do github por exemplo, para local

git add . ou git add <<nome_arquivo>> --->> adicionar arquivos para o git rastrear,(. adiciona todos os arquivos para serem comitados)
					    (<nome_arquivo>, adiciona um arquivo especifico para serem comitados)


git commit -m 'mensagem de commit' --->> salvar as alterações e tornar elas rastreáveis  , -m é a mensagem de commit deve ser de acordo com as ações que a pessoa fez no codigo, exemplo adicionando formulario de contato na página (feito no repositorio local)

git push --->> publicar as alterações num servidor remoto, intranet por exemplo, 

git pull --->> atualizar o repositorio local conforme o repositorio remoto

git merge --->> juntar as alterações de uma determinada branch com a branch merge, (merge) resoluções de conflitos qdo o git nao consegue identificar quem fez as alterações de um determinado arquivo, 2 pessoas alterando o mesmo arquivo e nao permite o push enquanto não arrumar manualmente o codigo

git status --->> traz informações referentes ao estado atual do projeto

git log --->> devolve um historico de alterações que o repositorio sofreu ao longo do tempo

git branch <<nome da branch>> --->>  cria uma nova ramificação para o repositorio, usado para criar novas funcionalidades de forma independente da branch principal

git remote rm origin  ---> remove a origem de repositorio remoto

git push -u origin master ---> Ele informa que para cada branch que está atualizado ou que foi enviado com êxito, deve adicionar a referência de upstream (rastreamento).

git push origin <nome da branch> ---> envia a branch para o repositorio remoto

git branch --> lista as branchs

git branch -b <nome da branch>

git checkout <nome da branch> --> git checkout e o nome da brancha q desejo ir

git branch -D <nome da branch> ----> deleta a branch

git checkout -b <nome da branch> ---> cria a branch e muda pra ela




https://git-scm.com/docs